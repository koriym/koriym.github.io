<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Test | BEAR Blog]]></title>
  <link href="http://koriym.github.io/blog/categories/test/atom.xml" rel="self"/>
  <link href="http://koriym.github.io/"/>
  <updated>2015-12-04T12:11:50+09:00</updated>
  <id>http://koriym.github.io/</id>
  <author>
    <name><![CDATA[Akihito Koriyama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHPもやらなきゃJenkins]]></title>
    <link href="http://koriym.github.io/2011/05/php%e3%82%82%e3%82%84%e3%82%89%e3%81%aa%e3%81%8d%e3%82%83jenkins/"/>
    <updated>2011-05-20T00:00:00+09:00</updated>
    <id>http://koriym.github.io/2011/05/php%e3%82%82%e3%82%84%e3%82%89%e3%81%aa%e3%81%8d%e3%82%83jenkins</id>
    <content type="html"><![CDATA[<div style="float: right; margin-left: 10px;">
  <a href="https://twitter.com/share" class="twitter-share-button" data-count="vertical" data-url="http://www.bear-project.net/blog/2011/05/php%e3%82%82%e3%82%84%e3%82%89%e3%81%aa%e3%81%8d%e3%82%83jenkins/">Tweet</a>
</div>


<p><a href="http://www.bear-project.net/blog/wp-content/uploads/2011/05/2793401dfcd60fa8778cab5a1524cd8f.png"><img src="http://www.bear-project.net/blog/wp-content/uploads/2011/05/2793401dfcd60fa8778cab5a1524cd8f.png" alt="" title="Jenkins" width="415" height="147" class="alignnone size-full wp-image-376" /></a>
改名なのかフォークなのか、とにかくHudsonプロジェクトはHudsonとJenkinsに分かれました。（開発者はフォークではなく改名と主張していて、この辺りの話はinfoQが詳しいようです。<a href="http://www.infoq.com/jp/hudson">http://www.infoq.com/jp/hudson</a> )<br/>
※前回の記事で紹介したphp-hudson-template はphp-jenkins-template に変わっています。</p>

<p>またPHPUnitで有名なSebastian氏がbuld.xmlを自動で作成してくれるPPW (<a href="https://github.com/sebastianbergmann/php-project-wizard">PHP Project Wizard </a>)というツールをリリースして、面倒だったプロジェクトの設定ファイルbuld.xmlの作成がとても簡単になりました。</p>

<p>Sebastian氏は<a href="http://jenkins-php.org/">http://jenkins-php.org/</a>というPHPでJenkinsを使うためのガイドをするサイトも用意しています。以下はその補足です。</p>

<h3>Jenkins インストール</h3>

<h4>本体</h4>

<ol>
<li>Jenkinsをインストール<br/>
<a href="http://jenkins-ci.org/">Jenkins公式サイト http://jenkins-ci.org</a>あらダウンロードしてインストールします。Windows/OSX/Ubuntu等のネイティブインストーラーもあるのでそれを利用するのがいいんじゃないでしょうか。自分はOSXのネイティブインストーラを使用しました。以下の例はOSXでのものです。</li>
</ol>


<p>起動はCLIで行います。<br/>
<code>
$ java -jar /Applications/Jenkins/jenkins.war
</code></p>

<p><a href="http://localhost:8080%E3%81%A7Jenkins%E3%81%AE%E7%94%BB%E9%9D%A2%E3%81%8C%E7%A2%BA%E8%AA%8D%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%AF%E3%81%9A%E3%81%A7%E3%81%99%E3%80%82">http://localhost:8080%E3%81%A7Jenkins%E3%81%AE%E7%94%BB%E9%9D%A2%E3%81%8C%E7%A2%BA%E8%AA%8D%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%AF%E3%81%9A%E3%81%A7%E3%81%99%E3%80%82</a></p>

<p>続いてJenkins用プラグインをインストールをします</p>

<p><code>
wget http://localhost:8080/jnlpJars/jenkins-cli.jar
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin checkstyle
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin clover
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin dry
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin htmlpublisher
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin jdepend
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin plot
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin pmd
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin violations
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin xunit
java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin git
java -jar jenkins-cli.jar -s http://localhost:8080 safe-restart
mv jenkins-cli.jar /Applications/Jenkins/
</code></p>

<p>次はPHPのツールです。</p>

<p><code>
sudo pear channel-discover pear.pdepend.org
sudo pear channel-discover pear.phpmd.org
sudo pear channel-discover pear.phpunit.de
sudo pear channel-discover components.ez.no
sudo pear channel-discover pear.symfony-project.com
sudo pear install pdepend/PHP_Depend
sudo pear install phpmd/PHP_PMD
sudo pear install phpunit/phpcpd
sudo pear install phpunit/phploc
sudo pear install PHPDocumentor
sudo pear install PHP_CodeSniffer
sudo pear install --alldeps phpunit/PHP_CodeBrowser
sudo pear install --alldeps phpunit/PHPUnit
sudo pear install phpunit/ppw
</code></p>

<h4>PHP Project Wizard (PPW)を使ってbuild.xmlを作成</h4>

<p>プロジェクト用の設定ファイルbuild.xmlファイルを作成します。リポジトリに対して一つ用意します。通常はパッケージのトップディレクトリに配置します。</p>

<p>作成はPPWというツールを使えば簡単です。</p>

<p>例えばzf2の場合はbuild.xmlが用意されていませんが、下記のようにppwコマンドでzf2/build.xmlとzf2/phpunit.xml.distが作成できます。</p>

<p><code>
$ git clone git://git.zendframework.com/zf.git zf2
$ cd zf2
$ ppw -name zf2 --source library/Zend/Acl --tests tests/Zend/Acl/ --bootstrap tests/Bootstrap.php --phpcs Zend .
</code></p>

<p>Wrote build script for Apache Ant to ./build.xml<br/>
Wrote configuration for PHPUnit to ./phpunit.xml.dist</p>

<p><code>
$ cd zf2
$ ant
</code><br/>
buildがうまくできると、zf2/build/に出力結果が保存されます。作成されたcode browserを開いてみましょう。<br/>
<code>
$ open build/code-browser/index.html
</code><br/>
<a href="http://www.bear-project.net/blog/wp-content/uploads/2011/05/0b7a8c9337217359309b72646469bd89.png"><img src="http://www.bear-project.net/blog/wp-content/uploads/2011/05/0b7a8c9337217359309b72646469bd89-300x83.png" alt="" title="CodeBrowser" width="300" height="83" class="alignnone size-medium wp-image-372" /></a><br/>
Jenkinsで試す前にまずantでbuildができるか試してみるのがいいと思います。</p>

<h3>Jenkinsでプロジェクト作成</h3>

<h4>プロジェクトのテンプレート作成</h4>

<p>jobフォルダにgitでプロジェクトテンプレートを用意します。</p>

<p><code>
$ cd ~/.hudson/jobs
$ git clone git://github.com/sebastianbergmann/php-jenkins-template.git php-template
$ java -jar /Applications/Jenkins/jenkins-cli.jar -s http://localhost:8080 reload-configuration
</code></p>

<h3>新規プロジェクト作成</h3>

<p>利用可能にしたプロジェクトテンプレートを指定して、新規プロジェクトを作成します。</p>

<p><a href="http://www.bear-project.net/blog/wp-content/uploads/2011/05/70b01b700a5d3988c82ac32f33a03345.png"><img src="http://www.bear-project.net/blog/wp-content/uploads/2011/05/70b01b700a5d3988c82ac32f33a03345.png" alt="" title="新規プロジェクト" width="586" height="431" class="alignnone size-full wp-image-370" /></a>
次の画面で、ビルド無効化 のチェックを外し、ソースコード管理システムを編集してソースコードレポジトリ情報を設定します。プロジェクト設定を保存し、ビルドを実行します。</p>

<p><a href="http://www.bear-project.net/blog/wp-content/uploads/2011/05/40103152c2ea101b4041d7d00f05f97f.png"><img src="http://www.bear-project.net/blog/wp-content/uploads/2011/05/40103152c2ea101b4041d7d00f05f97f.png" alt="" title="新規プロジェクト" width="544" height="293" class="alignnone size-full wp-image-392" /></a></p>

<h3>まとめ</h3>

<ul>
<li>HudsonはJenkinsに</li>
<li>Sebastian氏がppwというbuild.xml作成ツールとプロジェクトテンプレートを用意し利用が楽に</li>
<li>PHPコミュニティに多大な貢献をしてる氏に感謝</li>
<li>CIしよう</li>
</ul>

]]></content>
  </entry>
  
</feed>
